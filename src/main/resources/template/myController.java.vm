package ${package.Controller};

#set($domainName=$!{entity})
#set($end= $domainName.length() - 2)
#set($domainName=$domainName.substring(0,$end)+"DTO")
#set($dtoPackage=$entityPackage.replace("model.po","model.dto"))
#set($tmpMapper=${package.Mapper})
#set($packageNameArrs=${tmpMapper.split("[.]")})
#set($mainName=$packageNameArrs.get(2))
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

import ${cfg.packageDto}.${domainName};
import ${package.Service}.${table.serviceName};
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import com.hawthorn.framework.utils.bean.QcBean;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.*;
#else
import org.springframework.stereotype.Controller;
#end

import javax.annotation.Resource;
import java.util.HashMap;
import java.util.List;

#set($domainName=$!{entity})
#set($end = $domainName.length() - 2)
#set($controllerDomain=$domainName.substring(0,$end))
#set($domainName=$domainName.substring(0,$end)+"DTO")
#set ($camelDtoName = $!{domainName})
#set ($camelDtoName = $camelDtoName.substring(0,1).toLowerCase() + $camelDtoName.substring(1,$camelDtoName.length()))
#set ($controllerDomain = $controllerDomain.substring(0,1).toLowerCase() + $controllerDomain.substring(1,$controllerDomain.length()))
#foreach($field in ${table.fields})
    #if(${field.keyFlag})
        #set($keyPropertyType=${field.propertyType})
    #end
#end
#if(${cfg.moduleName})
  #set($moduleMapping = ${cfg.moduleName})
#end
#if(${controllerMappingHyphenStyle})
  #set($classMapping = ${controllerMappingHyphen})
#else
  #set($classMapping = ${controllerDomain})
#end
/**
 * @Copyright: Copyright (c) 2020 andyten
 * <p></p>
 * @remark: $!{table.comment} controller
 * @author: ${author}
 * @date: ${date}
 * @version v1.0.1
 */
@Api(tags = {"$mainName-$moduleMapping"})
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("/$mainName/$moduleMapping/$classMapping")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass}
{
#else
public class ${table.controllerName}
{
#end
  @Resource
  public ${table.serviceName} ${controllerDomain}Service;

  /**
   * @author: ${author}
   * @date: ${date}
   * @version: 1.0.1
   */
  @ApiOperation(value = "查询->${table.comment}信息", notes = "查询${table.comment}信息服务 带分页" )
  @ApiImplicitParams({
  })
  @GetMapping(value = "/select" )
  public IPage<$domainName> select()
  {
    int pageNum = 1;
    int pageSize = 2;
    Page<$domainName> page = new Page<>(pageNum, pageSize);
    QcBean qc = new QcBean();
    HashMap<String, QcBean> hm = new HashMap<>();
    return ${controllerDomain}Service.select(page,hm);
  }

  /**
   * @author: ${author}
   * @date: ${date}
   * @version: 1.0.1
   */
  @ApiOperation(value = "查询->${table.comment}信息 不带分页", notes = "查询${table.comment}信息服务 不带分页" )
  @ApiImplicitParams({
  })
  @GetMapping(value = "/selectNoPage" )
  public List<$domainName> selectNoPage()
  {
    QcBean qc = new QcBean();
    HashMap<String, QcBean> hm = new HashMap<>();
    return ${controllerDomain}Service.select(hm);
  }
}
